#!/usr/bin/env python
# coding:utf-8
# code by : Yasser BDJ
# email : by.root96@gmail.com
#s
import subprocess
import sys
#start impor class:
class impor:
    def __init__(self,*package):
        self.package=package
    def modules(self):
        self.modules=[]
        self.functions=[]
        for i in range(len(self.package)):
            self.package_name=self.package[i].split(":")[0]#.split("==")[0]
            """
            try:
                self.version="=="+self.package[i].split(":")[0].split("==")[1]
            except:
                self.version=""
            """
            try:
                if self.package[i].split(":")[1]!="":
                    self.package_functions=self.package[i].split(":")[1]
                else:
                    self.package_functions="*"
            except:
                self.package_functions="*"
            try:
                __import__(self.package_name)
                self.modules.append(self.package_name)
                self.functions.append(self.package_functions)
                #exec(f"import {self.package_name}\nprint({self.package_name}.__version__)")
            except:
                try:
                    subprocess.check_call([sys.executable,"-m","pip","install",self.package_name])
                    __import__(self.package_name)
                    self.modules.append(self.package_name)
                    self.functions.append(self.package_functions)
                except:
                    print(self.package_name+" Unavailable!")
        self.modules_x=""            
        for i in range(len(self.modules)):
            if i<len(self.modules) and self.modules_x!="":
                v="\n"
            else:
                v=""
            self.modules_x=self.modules_x+v+f"from {self.modules[i]} import {self.functions[i]}"
        return self.modules_x
#e